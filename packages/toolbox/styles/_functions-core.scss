////
/// Nwayo - Functions - Core
/// @group toolbox
////
@use 'sass:map';
@use 'sass:math';


/// Konstan access shortcut
/// @param {String} $path - path to access the Konstan
/// @todo What about the var $konstan
/// @return {Function} nwayo-map-deep-get / Value
@function konstan-get($path) {
	@return nwayo-map-deep-get($konstan, $path);
}


/// Konstan Value has key shortcut
/// @param {String} $path - path to access the Konstan
/// @todo What about the var $konstan
/// @return {Function | Bool} nwayo-map-deep-has-key
@function konstan-has-key($path) {
	@return nwayo-map-deep-has-key($konstan, $path);
}


/// Return assets path based on file type
/// @param {String} $file - complete file name including the extension
/// @param {String} $component - Component Name
/// @param {String} $type - Type of the file
/// @return {String} path to a file
@function nwayo-assets-path($file, $component, $type) {
	@if $type == 'images' {
		@return konstan-get('path.images') + '/' + $component + '/' + $file;
	} @else if $type == 'inline' {
		@return konstan-get('path.inline') + '/' + $component + '/' + $file;
	} @else if $type == 'fonts' {
		@return konstan-get('path.fonts') + '/' + $component + '/' + $file;
	}
}


/// Return assets Build path based on file type from on the build root
/// @param {String} $file - complete file name including the extension
/// @param {String} $component - Component Name
/// @param {String} $type - Type of the file
/// @return {String} path to a file
@function nwayo-build-path($file, $component, $type) {
	@if $type == 'images' {
		@return konstan-get('path.buildroot') + '/images/' + $component + '/' + $file;
	} @else if $type == 'fonts' {
		@return konstan-get('path.buildroot') + '/fonts/' + $component + '/' + $file;
	}
}


/// Get a relative z-index for the scope
/// @param {Maps} $scopes - All scopes and their z-index
/// @param {String} $scope - The scope that we want to use ass base
/// @param {Number} $delta - The value to be add to the base value of the scope
/// @return {Number | null} z-index
@function nwayo-zindex($scopes, $scope, $delta:0) {
	@return map.get($scopes, $scope) + $delta;
}


/// Simulate a breakpoint
/// @param {Number} $bp - the value of the breakpoint
/// @param {up | down} $direction - Difference between min-width or max-with
/// @todo What happen if an other value is given for direction (left, right, cha-cha reel smooth..)
/// @return {String} media query with a breakpoint
@function nwayo-breakpoint-media($bp, $direction) {
	@if $direction == up {
		@return 'screen and (min-width: #{math.div($bp + 1, $nwayo-basic-size) * 1em})';
	} @else if $direction == down {
		@return 'screen and (max-width: #{math.div($bp, $nwayo-basic-size) * 1em})';
	}
}


/// Return cache invalidation query string
/// @param $file - The target file
/// @return {String} cache invalidation query string
@function nwayo-cacheinvalidator-querystring($file) {
	@return '?v=' + nwayodart-checksum($file);
}
