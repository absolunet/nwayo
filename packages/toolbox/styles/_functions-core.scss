////
/// nwayo - Functions - Core
///
/// @group @absolunet/nwayo-toolbox
////

@use "sass:map";
@use "sass:math";

/// Get a konstan value.
///
/// @requires {Function} nwayo-map-deep-get
///
/// @param {String} $path - Path in dot notation.
/// @returns {*} The value.
///
@function konstan-get($path) {
	@return nwayo-map-deep-get($konstan, $path);
}

/// Check if a path exists in konstan.
///
/// @requires {Function} nwayo-map-deep-has-key
///
/// @param {String} $path - Path in dot notation.
/// @returns {Boolean} If path exists in konstan.
///
@function konstan-has-key($path) {
	@return nwayo-map-deep-has-key($konstan, $path);
}

/// Get asset url based on current bundle.
///
/// @requires {Function} konstan-get
///
/// @param {String} $file - Filename.
/// @param {String} $component - Component name.
/// @param {String} $type - Asset type [images|inline|fonts].
/// @returns {String} Asset url.
///
@function nwayo-assets-path($file, $component, $type) {
	@if $type == "images" {
		@return konstan-get("path.images") + "/" + $component + "/" + $file;
	} @else if $type == "inline" {
		@return konstan-get("path.inline") + "/" + $component + "/" + $file;
	} @else if $type == "fonts" {
		@return konstan-get("path.fonts") + "/" + $component + "/" + $file;
	}
}

/// Get asset absolute build path based on current bundle.
///
/// @requires {Function} konstan-get
///
/// @param {String} $file - Filename.
/// @param {String} $component - Component name.
/// @param {String} $type - Asset type [images|fonts].
/// @returns {String} Asset absolute build path.
///
@function nwayo-build-path($file, $component, $type) {
	@if $type == "images" {
		@return konstan-get("path.buildroot") + "/images/" + $component + "/" + $file;
	} @else if $type == "fonts" {
		@return konstan-get("path.buildroot") + "/fonts/" + $component + "/" + $file;
	}
}

/// Get a z-index relative to a defined scope.
///
/// @param {Map<String,Number>} $scopes - Scope names and base z-index values.
/// @param {String} $scope - Scope to use.
/// @param {Number} $delta [0] - Variance to apply to the scope value.
/// @returns {Number} Final z-index value.
///
@function nwayo-zindex($scopes, $scope, $delta: 0) {
	@return map.get($scopes, $scope) + $delta;
}

/// Get a breakpoint media query.
///
/// @requires {Number} $nwayo-basic-size
///
/// @param {Number} $breakpoint - Breakpoint pixel value (unitless).
/// @param {String} $direction - Include smaller or larger sizes [up|down].
/// @returns {String} Media query without the "@media".
///
@function nwayo-breakpoint-media($breakpoint, $direction) {
	@if $direction == up {
		@return "screen and (min-width: #{math.div($breakpoint + 1, $nwayo-basic-size) * 1em})";
	} @else if $direction == down {
		@return "screen and (max-width: #{math.div($breakpoint, $nwayo-basic-size) * 1em})";
	}
}
