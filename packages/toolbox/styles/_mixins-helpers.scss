////
/// nwayo - Mixins - Helpers
/// @group @absolunet/nwayo-toolbox
////

@use 'sass:math';

/// Prepare a ::before/::after pseudo-element to be used with a background image.
///
/// @param {Number} $width - Width.
/// @param {Number} $height [$width] - Height.
/// @outputs Empty content, width and height.
///
@mixin nwayo-pseudo-image-styles($width, $height:$width) {
	content: '';
	width: $width;
	height: $height;
}

/// Hide text inside an element to replace it by a background image.
///
/// @param {Number} $width - Width.
/// @param {Number} $height [$width] - Height.
/// @outputs Replaced width/height with padding that overflows the content outside the visible container.
///
@mixin nwayo-textreplace-image-styles($width, $height:$width) {
	overflow: hidden;
	width: 0;
	height: 0;
	padding: $height 0 0 $width;
}

/// Force an element to self-clear its children.
/// @link https://css-tricks.com/snippets/css/clear-fix/
///
/// @outputs Ye Olde Clearfix.
///
@mixin nwayo-clearfix-styles() {
	&::before, &::after {
		content: '';
		display: table;
	}

	&::after {
		clear: both;
	}
}

/// Visually hide an element without removing its presence.
///
/// @outputs Clipped content.
///
@mixin nwayo-visually-hidden-styles() {
	position: absolute;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	width: rem-calc(1);  // stylelint-disable-line declaration-property-value-disallowed-list -- Has to be static
	height: rem-calc(1);  // stylelint-disable-line declaration-property-value-disallowed-list -- Has to be static
	padding: 0;
	border: 0;
	margin: rem-calc(-1);  // stylelint-disable-line declaration-property-value-disallowed-list -- Has to be static
}

/// Make an element scalable within a ratio.
///
/// @param {Number} $width [2] - Width ratio.
/// @param {Number} $height [1] - Height ratio.
/// @param {String} $subselector [.scaling-block-content] - Subelement selector.
/// @outputs Scalable element that requires a subelement accessible via $subselector.
///
@mixin nwayo-scaling-block-styles($width: 2, $height:1, $subselector:'.scaling-block-content') {
	position: relative;
	display: block;
	height: 0;
	padding-top: math.percentage(math.div($height, $width));

	#{$subselector} {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}
}

/// Center vertically the child within its parent.
///
/// @param {String} $subselector [.valign-child] - Subelement selector.
/// @outputs A container which vertically centers a subelement accessible via $subselector.
///
@mixin nwayo-valign-parent-styles($subselector:'.valign-child') {
	font-size: 0;  // stylelint-disable-line scale-unlimited/declaration-strict-value -- Hack

	&::before {
		content: '';
		display: inline-block;
		vertical-align: middle;
		height: 100%;
	}

	#{$subselector} {
		display: inline-block;
		vertical-align: middle;
	}
}

/// Reset basic list styles (spacing, markers).
///
/// @outputs Resetter.
///
@mixin nwayo-list-reset-styles() {
	list-style: none;
	padding: 0;
	margin: 0;

	> li {
		margin: 0;
	}
}

/// Reset basic list styles to make it inline (spacing, markers).
///
/// @requires {Mixin} nwayo-list-reset-styles
///
/// @outputs Resetter.
///
@mixin nwayo-list-inline-styles() {
	@include nwayo-list-reset-styles();

	> li {
		display: inline-block;
		vertical-align: top;
	}
}

/// Define input and select placeholder.
///
/// @param {String} $selector [.placeholder] - Selector for manual placeholder.
/// @content Placeholder styles.
/// @outputs Styled placeholders.
///
@mixin nwayo-placeholder-styles($selector:'.placeholder') {
	#{'select' + $selector} {
		@content;
	}

	#{'input' + $selector} {
		@content;
	}

	input::placeholder {
		@content;
	}
}

/// Reset select styles.
///
/// @content Select styles.
/// @outputs Resetted select.
///
@mixin nwayo-select-reset-styles() {
	@-moz-document url-prefix() {
		select {
			@content;
		}
	}

	html.lt-ie10 select {
		@content;
	}
}

/// Customize input file button.
///
/// @content Button styles.
/// @outputs Styled button.
///
@mixin nwayo-input-file-button-styles() {
	&::-webkit-file-upload-button {
		@content;
	}

	//&::-ms-browse {
	//	@content;
	//}
}

/// Pseudo-arrow via creative border management.
///
/// @param {String} $direction [right] - Pointing direction (up, down, left, right).
/// @param {Number} $size [.625em] - Size.
/// @param {Color} $color - Color.
/// @outputs Pseudo-arrow.
///
@mixin nwayo-arrow-styles($direction:right, $size:.625em, $color) {
	display: inline-block;
	border: 0;

	@if $direction == up or $direction == down {
		height: $size;
		border-right: $size solid transparent;
		border-left: $size solid transparent;

		@if $direction == up {
			border-bottom: $size solid $color;
		} @else {
			border-top: $size solid $color;
		}

	} @else if $direction == left or $direction == right {
		width: $size;
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;

		@if $direction == left {
			border-right: $size solid $color;
		} @else {
			border-left: $size solid $color;
		}
	}
}

/// Stylize a list into columns.
///
/// @requires {Mixin} nwayo-clearfix-styles
///
/// @param {String} $subselector [> li] - Subelement selector.
/// @param {Number} $nb-column [2]- Number of columns.
/// @param {Number} $bullet-spacing [1.0625em] - Spacing reserved outside of <li> for a bullet.
/// @param {Number} $column-spacing [1.875em] - Spacing between columns.
/// @param {Number} $row-spacing [.625em] - Spacing between rows.
/// @param {Boolean} $base-style [true] - Wether or not to output base styles.
/// @outputs Columned list.
///
@mixin nwayo-column-list-styles($subselector:'> li', $nb-column:2, $bullet-spacing:1.0625em, $column-spacing:1.875em, $row-spacing:.625em, $base-style:true) {

	// Calculate a column offset : $column-spacing * ($column - 1) + $bullet-spacing * $column
	$total-spacing: $column-spacing * ($nb-column - 1) + $bullet-spacing * $nb-column;

	@if $base-style {
		padding-left: 0;
	}
	padding-right: $total-spacing;

	@if $base-style {
		@include nwayo-clearfix-styles();
		box-sizing: border-box;
	}

	#{$subselector} {
		@if $base-style {
			position: relative;
			float: left;
		}
		width: math.percentage(math.div(1, $nb-column));

		// Reset styles for media query usage
		&:nth-of-type(n) {
			left: auto;
			clear: none;
			margin-top: $row-spacing;
		}

		// Remove margin from first row
		&:nth-of-type(-n+#{$nb-column}) {
			margin-top: 0;
		}

		// Clear rows
		&:nth-of-type(#{$nb-column}n+1) {
			clear: both;
		}

		// Column offsets
		@for $i from 1 through $nb-column - 1 {
			&:nth-of-type(#{$nb-column}n-#{($i)}) {
				left: $column-spacing * ($nb-column - $i - 1) + $bullet-spacing * ($nb-column - $i);
			}
		}

		&:nth-of-type(#{$nb-column}n) {
			left: $total-spacing;
		}
	}
}
