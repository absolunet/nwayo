//-------------------------------------
//-- nwayo - Functions - Helpers
//-------------------------------------
@use 'sass:list';
@use 'sass:map';
@use 'sass:math';
@use 'sass:meta';
@use 'sass:string';

//-- Deep map: Path splitter
@function nwayo-map-deep-split-path($path) {
	$keys:      ();
	$separator: '.';
	$index:     string.index($path, $separator);

	@while $index {
		$item:  string.slice($path, 1, $index - 1);
		$keys:  list.append($keys, $item);
		$path:  string.slice($path, $index + 1);
		$index: string.index($path, $separator);
	}

	@return list.append($keys, $path);
}

//-- Deep map: Has key
@function nwayo-map-deep-has-key($map, $path) {
	@each $key in nwayo-map-deep-split-path($path) {
		@if map.has-key($map, $key) {
			$map: map.get($map, $key);
		} @else {
			@return false;
		}
	}

	@return true;
}

//-- Deep map: Get value
@function nwayo-map-deep-get($map, $path) {
	@each $key in nwayo-map-deep-split-path($path) {
		@if $map {
			@if map.has-key($map, $key) {
				$map: map.get($map, $key);
			} @else {
				$map: null;
			}
		}
	}

	@return $map;
}



//-- String replace
@function nwayo-str-replace($string, $search, $replace: '') {
	$index: string.index($string, $search);
	@if $index {
		@return string.slice($string, 1, $index - 1) + $replace + nwayo-str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
	}
	@return $string;
}



//-- Color replace
@function nwayo-color-replace($string, $source, $target) {
	$string: nwayo-str-replace($string, nwayo-to-string($source), nwayo-to-string($target));
	$string: nwayo-str-replace($string, string.to-upper-case(nwayo-to-string($source)), nwayo-to-string($target));
	@return $string;
}



//-- Cast to string
@function nwayo-to-string($value) {
	@return meta.inspect($value);
}



//-- Check if list contains value
//     @mixin xyz($options:()) {
//       $a: nwayo-list-contains($options, a);
//       $b: nwayo-list-contains($options, b);
//     }
@function nwayo-list-contains($list, $var) {
	@if list.index($list, $var) {
		@return true;
	}
	@return false;
}



//-- SVG optimized for data-uri (https://github.com/waldemarfm/sass-svg-uri)
//-- Chunk up string in order to avoid "stack level too deep" error
@function nwayo-svg-data-uri($svg) {
	$encoded: '';
	$slice: 1000;
	$index: 0;
	$loops: math.ceil(math.div(string.length($svg), $slice));
	@for $i from 1 through $loops {
		$chunk: string.slice($svg, $index, $index + $slice - 1);
		$chunk: nwayo-str-replace($chunk, '"', "'");
		$chunk: nwayo-str-replace($chunk, '<', '%3C');
		$chunk: nwayo-str-replace($chunk, '>', '%3E');
		$chunk: nwayo-str-replace($chunk, '&', '%26');
		$chunk: nwayo-str-replace($chunk, '#', '%23');
		$encoded: #{$encoded}#{$chunk};
		$index: $index + $slice;
	}
	@return url("data:image/svg+xml;charset=utf8,#{$encoded}");  // stylelint-disable-line string-quotes
}
