////
/// Nwayo - Mixins - Core
/// @group toolbox
/// @since 3.8.2 - TBD - Documentation update
////
@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use 'sass:string';


/// Generate Background image Styles (Inline or not)
/// @param {String} $file - File name with extension
/// @param {String} $component - Component Name
/// @param {Bool} $inline [false] - Is the image included inline
/// @param {Bool | Color} $color [false] - Color(s) that need to be remplace
/// @output Style of the background image
@mixin nwayo-bg-image-styles($file, $component, $inline:false, $color:false) {

	// URI
	$uri: '';
	@if $inline {
		$inline-image-path: nwayo-assets-path($file, $component, 'inline');

		@if string.index($file, '.svg') {
			$svg: nwayodart-read-file($inline-image-path);

			@if $color {

				// Single color
				@if meta.type-of($color) == 'color' {
					$svg: nwayo-color-replace($svg, $nwayo-svg-replacement-1-color, $color);

					// List
				} @else if meta.type-of($color) == 'list' {
					@for $i from 1 through list.length($color) {
						$svg: nwayo-color-replace($svg, list.nth($nwayo-svg-replacement-colors, $i), list.nth($color, $i));
					}

					// Hash
				} @else {
					@each $source, $target in $color {
						$svg: nwayo-color-replace($svg, $source, $target);
					}
				}
			}

			$uri: nwayo-svg-data-uri($svg);

		} @else {
			$uri: nwayodart-inline-file($inline-image-path);
		}

	} @else {
		$path: nwayo-build-path($file, $component, images);
		$url:  nwayo-assets-path($file, $component, images);

		// High density
		@if string.index($file, '@2x') {
			@media print, (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi) {  // stylelint-disable-line
				background-image: url($url + nwayo-cacheinvalidator-querystring($path));  // stylelint-disable-line function-url-quotes
			}

			$path: nwayo-str-replace($path, '@2x', '');
			$url:  nwayo-str-replace($url, '@2x', '');
		}

		$uri: url($url + nwayo-cacheinvalidator-querystring($path));  // stylelint-disable-line function-url-quotes
	}

	// Output
	background-image: #{$uri};
}


/// Generate Scalable icon Styles (Inline)
/// @param {String} $file - File name with extension
/// @param {String} $component - Component Name
/// @param {Bool | Color} $color [false] - Color(s) that need to be remplace
/// @output Style of the scalable icon (Inline)
@mixin nwayo-scalable-icon-styles($file, $component, $color:false) {
	@include nwayo-bg-image-styles($file, $component, $inline:true, $color:$color);
	background-position: center center;
	background-size: contain;
	background-repeat: no-repeat;
}


/// Generate Scalable icon multicolored states with state (Inline)
/// @param {String} $file - File name with extension
/// @param {String} $component - Component Name
/// @param {Sting} $state [default] - Current state of the icon
/// @param {Maps} $states [()] - Maps of all the states and their color
/// @return {Style} - Style of the scalable icon (Inline) with state color
@mixin nwayo-scalable-icon-colored-states-styles($file, $component, $state:default, $states:()) {
	@include nwayo-scalable-icon-styles($file, $component, $color:map.get($states, $state));
}


/// Generate Font-face Styles
/// @param {String} $name - Name of the font
/// @param {String} $filename - File name with extension
/// @param {String} $component - Component Name
/// @param {String} $weight [normal] - Weight of the font
/// @param {String} $style [normal] - Style of the font
/// @output Style of the Font-face
@mixin nwayo-load-font-styles($name, $filename, $component, $weight:normal, $style:normal) {
	$path:  nwayo-build-path($filename, $component, 'fonts');
	$url:   nwayo-assets-path($filename, $component, 'fonts');
	$woff2: if(nwayodart-file-exists($path + '.woff2'), url($url + '.woff2' + nwayo-cacheinvalidator-querystring($path + '.woff2')) format('woff2') + ',', '');  // stylelint-disable-line function-url-quotes

	@font-face {
		font-family: $name;
		font-weight: $weight;
		font-style: $style;
		font-display: swap;
		src: #{$woff2} url($url + '.woff' + nwayo-cacheinvalidator-querystring($path + '.woff'));  // stylelint-disable-line function-url-quotes
	}
}
