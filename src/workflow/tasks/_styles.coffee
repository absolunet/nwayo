#debug  = require 'gulp-debug'
gulp   = require 'gulp'
rename = require 'gulp-rename'

PATH = global.nwayo.path
ENV  = global.nwayo.env
Util = global.nwayo.util




#-- Inline images optimization
gulp.task 'styles_images', ->
	imagemin = require 'gulp-imagemin'

	return gulp.src PATH.files.inline, base:PATH.dir.root
		.pipe imagemin Util.imageminParams
		.pipe rename (path) -> path.dirname = Util.assetsRename path.dirname; return
		.pipe gulp.dest PATH.dir.cache



#-- Lint SCSS
gulp.task 'styles_lint', ->
	scsslint = require 'gulp-scss-lint'

	return gulp.src PATH.files.stylesLint
		.pipe scsslint({
			config: PATH.config.scsslint
		})
		.pipe scsslint.failReporter()



#-- Convert constants to SCSS
gulp.task 'styles_constants', ->
	jsonsass = require 'gulp-json-sass'
	merge    = require 'merge-stream'

	streams = []
	for bname, bundle of ENV.bundles
		streams.push(
			Util.vinylStream PATH.filename.konstanStyles, JSON.stringify konstan: Util.parseKonstan('styles', bundle.output.url)
				.pipe jsonsass()
				.pipe gulp.dest "#{PATH.dir.cacheStyles}/#{bname}"
		)

	return merge.apply null, streams



#-- Compile
gulp.task 'styles_compile', ['styles_lint', 'styles_constants'], ->
	fs           = require 'fs-extra'
	merge        = require 'merge-stream'
	sass         = require 'gulp-ruby-sass'
	autoprefixer = require 'gulp-autoprefixer'
	replace      = require 'gulp-replace'
	gulpif       = require 'gulp-if'
	minifycss    = require 'gulp-minify-css'

	streams = []
	for bname, bundle of ENV.bundles

		# for each collection
		for collection, list of bundle.styles.collections

			# add konstan
			list.unshift "#{PATH.dir.cacheStyles}/#{bname}/#{PATH.filename.konstan}"

			# require each file
			list[i] = "@import '#{item}';" for item, i in list

			fs.outputFileSync "#{PATH.dir.cacheStyles}/#{bname}/collections/#{collection}.#{PATH.ext.styles}", """
				/*!\n * Generated by nwayo #{ENV.pkg.nwayo.version} for #{ENV.pkg.name}:#{bname}\n */\n
				#{list.join '\n'}
			"""

		# process all collections from this bundle
		streams.push(
			sass "#{PATH.dir.cacheStyles}/#{bname}/collections/*.#{PATH.ext.styles}", {
					loadPath:      PATH.dir.root
					cacheLocation: PATH.dir.cacheSass
					compass:       true
					trace:         true
					sourcemap:     false
				}
				.pipe autoprefixer browsers: bundle.styles.options.autoprefixer
				.pipe gulpif( bundle.styles.options.minify, minifycss() )
				.pipe gulp.dest "#{bundle.output.build}/#{PATH.build.styles}"
		)

	return merge.apply null, streams



#-- Rebuild
gulp.task 'styles', (cb) ->
	del         = require 'del'
	runsequence = require 'run-sequence'

	list = [PATH.dir.cacheInline, PATH.dir.cacheSass]
	list.push "#{bundle.output.build}/#{PATH.build.styles}", "#{PATH.dir.cacheStyles}/#{bname}" for bname, bundle of ENV.bundles

	del.sync list, force:true
	runsequence 'styles_images', 'styles_compile', cb
