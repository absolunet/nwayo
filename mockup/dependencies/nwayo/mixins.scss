//-- Background image
@mixin bg-image ($file, $options:()) {
	$options:  map-merge((type:default, color:transparent, position:center center, repeat:no-repeat), $options);
	$width:    if(map-has-key($options, width), map-get($options, width), image-width($file));
	$height:   if(map-has-key($options, height), map-get($options, height), image-height($file));
	$color:    map-get($options, color);
	$position: map-get($options, position);
	$repeat:   map-get($options, repeat);
	$uri:      '';

	// inline
	@if str-index($file, $inline-path) {
		$uri: inline-image($file);

	// high density
	} @else if str-index($file, '@2x') {
		@media print, (-o-min-device-pixel-ratio: 5/4), (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi) {
			background-image:url($file); background-size:$width/2 $height/2;
		}
		$uri: nwayo_str_replace('url("'+$file+'")', '@2x', '');
	
	// normal
	} @else {
		$uri: url($file);
	}
	
	// css	
	width:$width; height:$height; background:$color #{$uri} $position $repeat;
}


//-- Font-face
@mixin load-font ($name, $filename, $weight:normal, $style:normal, $inline-path:-inline-font-path(), $path:-font-path()) {
	@font-face {
		font-family:$name;
		src:url($path+'/'+$filename+'.eot');
		src:url($path+'/'+$filename+'.eot?#iefix') format('embedded-opentype'),
		    inline-font-files($inline-path+'/'+$filename+'.woff'),
		    url($path+'/'+$filename+'.ttf') format('truetype');
		font-weight:$weight;
		font-style:$style;
	}
}


//-- Selection
@mixin selection {
	::-moz-selection { @content; }
	::selection      { @content; }
}


//-- Placeholder
@mixin placeholder {
	input.Placeholder                { @content; }
	input::-webkit-input-placeholder { @content; }
	input::-moz-placeholder          { @content; }
}


//-- Replace text
@mixin replace-text ($width:auto, $height:auto) { 
	display:block; overflow:hidden; width:$width; height:$height; text-align:left; white-space:nowrap; text-indent:1000%;
}


//-- Arrow
@mixin arrow ($direction:right, $size:10px, $color:$black) {
	display:inline-block; border:0;

	@if $direction == up or $direction == down {
		height:$size; border-left:$size solid transparent; border-right:$size solid transparent;

		@if $direction == up {
			border-bottom:$size solid $color;
		} @else {
			border-top:$size solid $color;
		}
	
	} @else if $direction == left or $direction == right {
		width:$size; border-top:$size solid transparent; border-bottom:$size solid transparent;

		@if $direction == left {
			border-right:$size solid $color;
		} @else {
			border-left:$size solid $color;
		}
	}
}


