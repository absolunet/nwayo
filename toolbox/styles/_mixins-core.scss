//-------------------------------------
//-- nwayo - Mixins - Core
//-------------------------------------

//-- Background image
@mixin nwayo-bg-image-styles($file, $component, $inline:false, $color:false) {

	// URI
	$uri: '';
	@if $inline {
		$inline-image-path: nwayo-assets-path($file, $component, 'inline');

		@if str-index($file, '.svg') {
			$svg: nwayorb-read-file($inline-image-path);

			@if $color {

				// Single color
				@if type-of($color) == 'color' {
					$svg: nwayo-color-replace($svg, $nwayo-svg-replacement-1-color, $color);

					// List
				} @else if type-of($color) == 'list' {
					@for $i from 1 through length($color) {
						$svg: nwayo-color-replace($svg, nth($nwayo-svg-replacement-colors, $i), nth($color, $i));
					}

					// Hash
				} @else {
					@each $source, $target in $color {
						$svg: nwayo-color-replace($svg, $source, $target);
					}
				}
			}

			$uri: nwayo-svg-data-uri($svg);

		} @else {
			$uri: nwayorb-inline-image($inline-image-path);
		}

	} @else {
		$uri: url(nwayo-assets-path($file, $component, images));  // stylelint-disable-line function-url-quotes
	}

	// High density
	@if str-index($file, '@2x') {
		$path: 'components/' + $component + '/assets/' + if($inline, 'inline-', '') + 'images/' + $file;

		@media print, (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi) {  // stylelint-disable-line
			background-image: $uri;
		}

		$uri: nwayo-str-replace($uri, '@2x', '');
	}

	// Output
	background-image: #{$uri};
}


//-- Scalable icon
@mixin nwayo-scalable-icon-styles($file, $component, $color:false) {
	@include nwayo-bg-image-styles($file, $component, $inline:true, $color:$color);
	background-position: center center;
	background-size: contain;
	background-repeat: no-repeat;
}


//-- Scalable icon multicolored states
@mixin nwayo-scalable-icon-colored-states-styles($name, $component, $state:default, $states:()) {
	@include nwayo-scalable-icon-styles($name, $component, $color:map-get($states, $state));
}


//-- Images in ::before/::after pseudo-elements
@mixin nwayo-pseudo-image-styles($width, $height:$width) {
	content: '';
	width: $width;
	height: $height;
}


//-- Images which replaces text
@mixin nwayo-textreplace-image-styles($width, $height:$width) {
	overflow: hidden;
	width: 0;
	height: 0;
	padding: $height 0 0 $width;
}






//-- Font-face
@mixin nwayo-load-font-styles($name, $filename, $component, $weight:normal, $style:normal) {
	$url:   nwayo-assets-path($filename, $component, 'fonts');
	$woff2: if(nwayorb-file-exists($konstan-path-nwayoroot + '/components/' + $component + '/assets/fonts/' + $filename + '.woff2'), url($url + '.woff2') format('woff2') + ',', '');
	@font-face {
		font-family: $name;
		font-weight: $weight;
		font-style: $style;
		src: #{$woff2} url($url + '.woff');
	}
}
