//-------------------------------------
//-- Utils: Mixins extra
//-------------------------------------

//-- Placeholder
@mixin placeholder-mixin () {
	select.placeholder { @content; }
	input.placeholder { @content; }
	input::placeholder { @content; }
}

//-- Select reset
@mixin select-reset-mixin() {
	@-moz-document url-prefix() { select { @content; } }
	html.lt-ie10 select { @content; }
}

//-- Input type file button
@mixin input-file-button-mixin() {
	&::-webkit-file-upload-button { @content; }
	//&::-ms-browse { @content; }
}





//-- Arrow
@mixin arrow-mixin ($direction:right, $size:.625em, $color:$text-color) {
	display: inline-block;
	border: 0;

	@if $direction == up or $direction == down {
		height: $size;
		border-right: $size solid transparent;
		border-left: $size solid transparent;

		@if $direction == up {
			border-bottom: $size solid $color;
		} @else {
			border-top: $size solid $color;
		}

	} @else if $direction == left or $direction == right {
		width: $size;
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;

		@if $direction == left {
			border-right: $size solid $color;
		} @else {
			border-left: $size solid $color;
		}
	}
}





//-- Vertical center the child within the parent
@mixin valign-parent {
	font-size: 0;

	&::before {
		content: '';
		display: inline-block;
		vertical-align: middle;
		height: 100%;
	}

	.valign-child {
		display: inline-block;
		vertical-align: middle;
	}
}





//-- Create a block that scale within a ratio
@mixin scaling-block($w: 2, $h:1) {
	position: relative;
	display: block;
	height: 0;
	padding-top: percentage($h / $w);

	.scaling-block-content {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}
}





//-- Create a list with columns
// $nb-column - The number of columns (Min.: 2)
// $bullet-spacing - Spacing reserved outside of <li> for a bullet
// $column-spacing - Spacing between columns
// $row-spacing - Spacing between rows
// $base-style - Wether or not to output base styles (Ex.: set to false in a media query to prevent repeating the styles already defined)
@mixin column-list($nb-column:2, $bullet-spacing:1.0625em, $column-spacing:1.875em, $row-spacing:.625em, $base-style:true) {
	// calculate a column offset : $column-spacing * ($column - 1) + $bullet-spacing * $column
	$total-spacing: $column-spacing * ($nb-column - 1) + $bullet-spacing * $nb-column;
	@if($base-style) {
		padding-left: 0;
	}
	padding-right: $total-spacing;
	@if($base-style) {
		box-sizing: border-box;
		// clearfix
		&::before, &::after {
			content: ' ';
			display: table;
		}

		&::after {
			clear: both;
		}
	}

	> li {
		@if($base-style) {
			position: relative;
			float: left;
		}
		width: percentage(1 / $nb-column);
		// reset styles for media query usage
		&:nth-of-type(n) {
			left: auto;
			clear: none;
			margin-top: $row-spacing;
		}
		// remove margin from first row
		&:nth-of-type(-n+#{$nb-column}) {
			margin-top: 0;
		}
		// clear rows
		&:nth-of-type(#{$nb-column}n+1) {
			clear: both;
		}
		// column offsets
		@for $i from 1 through $nb-column - 1 {
			&:nth-of-type(#{$nb-column}n-#{($i)}) {
				left: $column-spacing * ($nb-column - $i - 1) + $bullet-spacing * ($nb-column - $i);
			}
		}

		&:nth-of-type(#{$nb-column}n) {
			left: $total-spacing;
		}
	}
}
