# http://eslint.org/docs/rules/

# Extends - Extend other config
# extends:


# Parser Options
root: true
parser: espree
parserOptions:
  ecmaVersion: 2015
  sourceType: script
  ecmaFeatures:
    globalReturn: false
    impliedStrict: false
    jsx: false
    experimentalObjectRestSpread: true


# Environments
env:
  browser: true
  es6: true
  jquery: true


# Globals
globals:
  global: false

  # nwayo
  konstan: false
  app: false
  __: false
  PROJECT: false
  DOM_PARSE: false
  DOCUMENT_LOAD: false

  # nwayo vendors
  $Global: false
  _: false
  Modernizr: false
  PubSub: false

  # Classic libs
  addthis: false
  addthis_config: true
  addthis_share: true
  Cookies: false
  FastClick: false
  Foundation: false
  google: false
  kafe: false
  WebFont: false

  # Project specific
  #spConfig: false
  #Translator: false
  #Validation: false


# Plugins - Additional plugins
# plugins:


# Settings - Shared Settings
# settings:


# Rules
rules:

  # Possible Errors
  no-cond-assign: [error, always]
  no-console: [warn]
  no-constant-condition: [error]
  no-control-regex: [error]
  no-debugger: [warn]
  no-dupe-args: [error]
  no-dupe-keys: [error]
  no-duplicate-case: [error]
  no-empty-character-class: [error]
  no-empty: [error, {allowEmptyCatch: false}]
  no-ex-assign: [error]
  no-extra-boolean-cast: [error]
  no-extra-parens: [error, all, {nestedBinaryExpressions: false}]
  no-extra-semi: [error]
  no-func-assign: [error]
  no-inner-declarations: [error, both]
  no-invalid-regexp: [error]
  no-irregular-whitespace: [error]
  no-obj-calls: [error]
  no-prototype-builtins: [error]
  no-regex-spaces: [error]
  no-sparse-arrays: [error]
  no-template-curly-in-string: [error]
  no-unexpected-multiline: [error]
  no-unreachable: [error]
  no-unsafe-finally: [error]
  no-unsafe-negation: [error]
  use-isnan: [error]
  valid-jsdoc: [off]
  valid-typeof: [error, {requireStringLiterals: true}]


  # Best Practices
  accessor-pairs: [error, {setWithoutGet: true, getWithoutSet: true}]
  array-callback-return: [error]
  block-scoped-var: [error]
  class-methods-use-this: [error]
  complexity: [off]
  consistent-return: [error]
  curly: [error, all]
  default-case: [error]
  dot-location: [error, property]
  dot-notation: [error, {allowKeywords: true}]
  eqeqeq: [error, always]
  guard-for-in: [error]
  no-alert: [warn]
  no-caller: [error]
  no-case-declarations: [error]
  no-div-regex: [error]
  no-else-return: [error]
  no-empty-function: [error]
  no-empty-pattern: [error]
  no-eq-null: [error]
  no-eval: [error]
  no-extend-native: [error]
  no-extra-bind: [error]
  no-extra-label: [error]
  no-fallthrough: [error]
  no-floating-decimal: [error]
  no-global-assign: [error]
  no-implicit-coercion: [error]
  no-implicit-globals: [error]
  no-implied-eval: [error]
  no-invalid-this: [off]
  no-iterator: [error]
  no-labels: [error]
  no-lone-blocks: [error]
  no-loop-func: [error]
  no-magic-numbers: [off]
  no-multi-spaces: [off]
  no-multi-str: [error]
  no-new-func: [error]
  no-new-wrappers: [error]
  no-new: [error]
  no-octal-escape: [error]
  no-octal: [error]
  no-param-reassign: [error]
  no-proto: [error]
  no-redeclare: [error, {builtinGlobals: true}]
  no-return-assign: [error, always]
  no-script-url: [error]
  no-self-assign: [error, {props: true}]
  no-self-compare: [error]
  no-sequences: [error]
  no-throw-literal: [error]
  no-unmodified-loop-condition: [error]
  no-unused-expressions: [error]
  no-unused-labels: [error]
  no-useless-call: [error]
  no-useless-concat: [error]
  no-useless-escape: [error]
  no-void: [error]
  no-warning-comments: [warn, {location: anywhere}]
  no-with: [error]
  radix: [error, always]
  vars-on-top: [error]
  wrap-iife: [error, inside]
  yoda: [error, never]


  # Strict Mode
  strict: [error, function]


  # Variables
  init-declarations: [off]
  no-catch-shadow: [error]
  no-delete-var: [error]
  no-label-var: [error]
  no-restricted-globals: [error, window]
  no-shadow-restricted-names: [error]
  no-shadow: [error, {builtinGlobals: false, hoist: all}]
  no-undef-init: [error]
  no-undef: [error]
  no-undefined: [off]
  no-unused-vars: [error]
  no-use-before-define: [error]


  # Node.js and CommonJS
  # n/a


  # Stylistic Issues
  array-bracket-spacing: [error, never]
  block-spacing: [error, always]
  brace-style: [error, 1tbs, {allowSingleLine: true}]
  camelcase: [error, {properties: always}]
  comma-dangle: [error, never] #always-multiline
  comma-spacing: [error, {before: false, after: true}]
  comma-style: [error, last]
  computed-property-spacing: [error, never]
  consistent-this: [error, self]
  eol-last: [error, always]
  func-call-spacing: [error, never]
  func-names: [error, never]
  func-style: [error, expression]
  id-blacklist: [off]
  id-length: [off]
  id-match: [off]
  indent: [error, tab, {SwitchCase: 1, VariableDeclarator: 1, outerIIFEBody: 1, MemberExpression: 1}]
  jsx-quotes: [error, prefer-double]
  key-spacing:
    - error
    - singleLine:
        beforeColon: false
        afterColon: false
      multiLine:
        beforeColon: false
        afterColon: true
      align:
        beforeColon: false
        afterColon: true
        on: value
        mode: minimum
  keyword-spacing: [error, {before: true, after: true}]
  line-comment-position: [off]
  linebreak-style: [error, unix]
  lines-around-comment: [error, {beforeBlockComment: true, afterBlockComment: false, beforeLineComment: false, afterLineComment: false}]
  lines-around-directive: [error, {before: never, after: always}]
  max-depth: [off]
  max-len: [off]
  max-lines: [off]
  max-nested-callbacks: [off]
  max-params: [off]
  max-statements-per-line: [error, {max: 2}]
  max-statements: [off]
  multiline-ternary: [off]
  new-cap: [error, {newIsCap: true, capIsNew: true, properties: false}]
  new-parens: [error]
  newline-after-var: [off]
  newline-before-return: [error]
  newline-per-chained-call: [off]
  no-array-constructor: [error]
  no-bitwise: [error]
  no-continue: [error]
  no-inline-comments: [off]
  no-lonely-if: [error]
  no-mixed-operators: [error, {allowSamePrecedence: true}]
  no-mixed-spaces-and-tabs: [error]
  no-multiple-empty-lines: [error, {max: 100, maxEOF: 1, maxBOF: 0}]
  no-negated-condition: [off]
  no-nested-ternary: [off]
  no-new-object: [error]
  no-plusplus: [off]
  no-restricted-syntax: [off]
  no-tabs: [off]
  no-ternary: [off]
  no-trailing-spaces: [error, {skipBlankLines: false}]
  no-underscore-dangle: [off]
  no-unneeded-ternary: [error, {defaultAssignment: false}]
  no-whitespace-before-property: [error]
  object-curly-newline: [error, {multiline: true, minProperties: 5}]
  object-curly-spacing: [error, always]
  object-property-newline: [off]
  one-var-declaration-per-line: [error, always]
  one-var: [error, never]
  operator-assignment: [error, always]
  operator-linebreak: [error, after, {overrides: {'?': before, ':': before}}]
  padded-blocks: [error, {classes: always, switches: always}]
  quote-props: [error, consistent-as-needed, {keywords: true}]
  quotes: [error, single, {avoidEscape: true, allowTemplateLiterals: true}]
  require-jsdoc: [off] # toco:chceck
  semi-spacing: [error, {before: false, after: true}]
  semi: [error, always]
  sort-keys: [off]
  sort-vars: [off]
  space-before-blocks: [error, always]
  space-before-function-paren: [error, never]
  space-in-parens: [error, never]
  space-infix-ops: [error, {int32Hint: false}]
  space-unary-ops: [error, {words: true, nonwords: false}]
  spaced-comment:
    - error
    - always
    - exceptions: ['-', '*']
      markers: ['=', '--']
      block:
        balanced: true
  unicode-bom: [error, never]
  wrap-regex: [error]


  # ECMAScript 6
  arrow-body-style: [error, always]
  arrow-parens: [error, always]
  arrow-spacing: [error, {before: true, after: true}]
  constructor-super: [error]
  generator-star-spacing: [error, before]
  no-class-assign: [error]
  no-confusing-arrow: [error]
  no-const-assign: [error]
  no-dupe-class-members: [error]
  no-duplicate-imports: [error]
  no-new-symbol: [error]
  no-restricted-imports: [error]
  no-this-before-super: [error]
  no-useless-computed-key: [error]
  no-useless-constructor: [error]
  no-useless-rename: [error]
  no-var: [error]
  object-shorthand: [error, consistent]
  prefer-arrow-callback: [error]
  prefer-const: [error, {destructuring: any, ignoreReadBeforeAssign: false}]
  prefer-numeric-literals: [error]
  prefer-reflect: [off] # Needs poyfill
  prefer-rest-params: [error]
  prefer-spread: [error]
  prefer-template: [error]
  require-yield: [error]
  rest-spread-spacing: [error, never]
  symbol-description: [error]
  sort-imports: [off]
  template-curly-spacing: [error, never]
  yield-star-spacing: [error, before]
